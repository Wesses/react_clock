{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timerIdForTime","handleContextMenu","event","preventDefault","props","setHasClock","handleClick","document","addEventListener","this","removeEventListener","window","setInterval","newTime","console","info","toUTCString","slice","setState","prevProps","name","debug","clearInterval","className","React","PureComponent","getRandomName","value","now","toString","App","hasClock","clockName","timerIdForClockName","ReactDOM","render","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,eAAiB,EALnB,EAkCEC,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKC,MAAMC,aAAY,IApC3B,EAuCEC,YAAc,SAACJ,GACbA,EAAMC,iBACN,EAAKC,MAAMC,aAAY,IAzC3B,uDAOE,WAA2B,IAAD,OACxBE,SAASC,iBAAiB,cAAeC,KAAKR,mBAC9CM,SAASG,oBAAoB,QAASD,KAAKH,aAE3CG,KAAKT,eAAiBW,OAAOC,aAAY,WACvC,IAAMC,EAAU,IAAId,KAGpBe,QAAQC,KAAKF,EAAQG,cAAcC,OAAO,IAAK,IAC/C,EAAKC,SAAS,CAAEpB,KAAMe,MACrB,OAjBP,gCAoBE,SAAmBM,GACbA,EAAUC,OAASX,KAAKL,MAAMgB,MAEhCN,QAAQO,MAAR,uBAA8BF,EAAUC,KAAxC,eAAmDX,KAAKL,MAAMgB,SAvBpE,kCA2BE,WACEb,SAASC,iBAAiB,QAASC,KAAKH,aACxCC,SAASG,oBAAoB,cAAeD,KAAKR,mBAEjDqB,cAAcb,KAAKT,kBA/BvB,oBA4CE,WACE,OACE,sBAAKuB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGd,KAAKL,MAAMgB,OAGb,YAED,sBAAMG,UAAU,cAAhB,SACGd,KAAKZ,MAAMC,KAAKkB,cAAcC,OAAO,IAAK,YAtDrD,GAA2BO,IAAMC,eCPjC,SAASC,IACP,IAAMC,EAAQ5B,KAAK6B,MAAMC,WAAWZ,OAAO,GAE3C,MAAM,SAAN,OAAgBU,GAQX,IAAMG,EAAb,4MACEjC,MAAQ,CACNkC,UAAU,EACVC,UAAW,WAHf,EAMEC,oBAAsB,EANxB,uDAQE,WAA2B,IAAD,OACxBxB,KAAKwB,oBAAsBtB,OAAOC,aAAY,WAC5C,EAAKM,SAAS,CAAEc,UAAWN,QAC1B,QAXP,kCAcE,WACEJ,cAAcb,KAAKwB,uBAfvB,oBAkBE,WAA2B,IAAD,OACxB,OACE,sBAAKV,UAAU,MAAf,UACE,6CAECd,KAAKZ,MAAMkC,UACV,cAAC,EAAD,CACE1B,YAAa,SAAC0B,GAAD,OAAc,EAAKb,SAAS,CAAEa,cAC3CX,KAAMX,KAAKZ,MAAMmC,mBA1B7B,GAAyBR,IAAMC,eCZ/BS,IAASC,OACP,cAAC,EAAD,IACA5B,SAAS6B,eAAe,W","file":"static/js/main.e6afb18c.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  time: Date;\n};\n\ntype Props = {\n  setHasClock: (hasClock: boolean) => void;\n  name: string;\n};\n\nexport class Clock extends React.PureComponent<Props, State> {\n  state = {\n    time: new Date(),\n  };\n\n  timerIdForTime = 0;\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', this.handleContextMenu);\n    document.removeEventListener('click', this.handleClick);\n\n    this.timerIdForTime = window.setInterval(() => {\n      const newTime = new Date();\n\n      // eslint-disable-next-line no-console\n      console.info(newTime.toUTCString().slice(-12, -4));\n      this.setState({ time: newTime });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    document.addEventListener('click', this.handleClick);\n    document.removeEventListener('contextmenu', this.handleContextMenu);\n\n    clearInterval(this.timerIdForTime);\n  }\n\n  handleContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n    this.props.setHasClock(false);\n  };\n\n  handleClick = (event: MouseEvent) => {\n    event.preventDefault();\n    this.props.setHasClock(true);\n  };\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.time.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends React.PureComponent<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerIdForClockName = 0;\n\n  componentDidMount(): void {\n    this.timerIdForClockName = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount(): void {\n    clearInterval(this.timerIdForClockName);\n  }\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && (\n          <Clock\n            setHasClock={(hasClock) => this.setState({ hasClock })}\n            name={this.state.clockName}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}